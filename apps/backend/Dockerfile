# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build backend`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run -p 3000:3000 -t backend`.
FROM node:18-alpine

ENV HOST=0.0.0.0
ENV PORT=3333
ENV NODE_ENV=production

ARG DIGITALOCEAN_KEY
ENV DIGITALOCEAN_KEY=$DIGITALOCEAN_KEY
ARG DIGITALOCEAN_SECRET
ENV DIGITALOCEAN_SECRET=$DIGITALOCEAN_SECRET
ARG DIGITALOCEAN_ENDPOINT
ENV DIGITALOCEAN_ENDPOINT=$DIGITALOCEAN_ENDPOINT
ARG DIGITALOCEAN_SPACE
ENV DIGITALOCEAN_SPACE=$DIGITALOCEAN_SPACE
ARG JWT_SECRET
ENV JWT_SECRET=$JWT_SECRET
ARG MONGODB_URI
ENV MONGODB_URI=$MONGODB_URI
ARG RECAPTCHA
ENV RECAPTCHA=$RECAPTCHA
ARG RECAPTCHA_SECRET_KEY
ENV RECAPTCHA_SECRET_KEY=$RECAPTCHA_SECRET_KEY

WORKDIR /app

RUN addgroup -S lems && adduser -S backend -G lems

COPY dist/apps/backend backend
RUN chown -R backend:lems .

# Add when mongo goes back to external
# ARG MONGO_CA_CERTIFICATE
# ENV MONGO_CA_CERTIFICATE=$MONGO_CA_CERTIFICATE
# RUN echo $MONGO_CA_CERTIFICATE > /root/mongo-ca-certificate.crt
# RUN chown backend:lems /root/mongo-ca-certificate.crt

WORKDIR /app/backend
RUN npm ci

EXPOSE 3333

CMD [ "node", "main.js" ]
